openapi: 3.0.3
x-stoplight:
  id: q0ox6g648fmme
info:
  title: Berichten Service
  description: 'De Berichtenservice faciliteert het versturen van berichten (bijvoorbeeld aan de hand van WRC sjablonen) en het rapporteren daarover. Hiervoor levert het zowel bulk-capaciteiten (voor bijvoorbeeld het versturen van mailings), als opvolg-capaciteiten (voor het controleren van bijvoorbeeld het aankomen van emails). Vooralsnog ondersteunt de Berichtenservice het versturen van mails en sms-berichten, maar er wordt nagedacht over het toevoegen van een post route en chatfunctionaliteit (social media). Het kan hierbij zowel zelfstandig opereren, als een front leveren voor functionaliteit van derden (Mailgun, Mailchimp, Messagbird, etc)'
  version: V1.0
  contact:
    name: Ruben van der LInde
    url: www.conduction.nl
    email: ruben@conduction.nl
  license:
    name: EUPL
servers:
  - description: ''
paths:
  /messages:
    get:
      operationId: getMessageCollection
      tags:
        - Message
      responses:
        '200':
          description: Message collection
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:previous':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:previous':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
      summary: Retrieves the collection of Message resources.
      description: Retrieves the collection of Message resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: limit
          in: query
          description: The number of items per page
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        - name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[reciever]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[sender]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[type]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[data]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[status]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[externalServiceId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[send]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'send[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'send[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'send[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'send[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: type
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'type[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        - name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postMessageCollection
      tags:
        - Message
      responses:
        '201':
          description: Message resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Message'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Message'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Message'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Message'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Message'
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Message'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Message'
            application/xml:
              schema:
                $ref: '#/components/schemas/Message'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Message'
            text/csv:
              schema:
                $ref: '#/components/schemas/Message'
            text/html:
              schema:
                $ref: '#/components/schemas/Message'
          links:
            GetMessageItem:
              operationId: getMessageItem
              parameters:
                id: $response.body#/id
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /messages/{id}`.'
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
      summary: Creates a Message resource.
      description: Creates a Message resource.
      parameters: []
      requestBody:
        description: The new Message resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      deprecated: false
    parameters: []
  '/messages/{id}':
    get:
      operationId: getMessageItem
      tags:
        - Message
      responses:
        '200':
          description: Message resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Resource not found
      summary: Retrieves a Message resource.
      description: Retrieves a Message resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putMessageItem
      tags:
        - Message
      responses:
        '200':
          description: Message resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          links:
            GetMessageItem:
              operationId: getMessageItem
              parameters:
                id: $response.body#/id
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /messages/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Replaces the Message resource.
      description: Replaces the Message resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Message resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      deprecated: false
    delete:
      operationId: deleteMessageItem
      tags:
        - Message
      responses:
        '204':
          description: Message resource deleted
        '404':
          description: Resource not found
      summary: Removes the Message resource.
      description: Removes the Message resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /send_lists:
    get:
      operationId: getSendListCollection
      tags:
        - SendList
      responses:
        '200':
          description: SendList collection
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/SendList'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:previous':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/SendList'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:previous':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList'
      summary: Retrieves the collection of SendList resources.
      description: Retrieves the collection of SendList resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: limit
          in: query
          description: The number of items per page
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        - name: mail
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        - name: phone
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        - name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[mail]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[phone]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'organization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        - name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postSendListCollection
      tags:
        - SendList
      responses:
        '201':
          description: SendList resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList'
          links:
            GetSendListItem:
              operationId: getSendListItem
              parameters:
                id: $response.body#/id
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /send_lists/{id}`.'
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
      summary: Creates a SendList resource.
      description: Creates a SendList resource.
      parameters: []
      requestBody:
        description: The new SendList resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendList'
        required: true
      deprecated: false
    parameters: []
  '/send_lists/{id}':
    get:
      operationId: getSendListItem
      tags:
        - SendList
      responses:
        '200':
          description: SendList resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendList'
        '404':
          description: Resource not found
      summary: Retrieves a SendList resource.
      description: Retrieves a SendList resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putSendListItem
      tags:
        - SendList
      responses:
        '200':
          description: SendList resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendList'
          links:
            GetSendListItem:
              operationId: getSendListItem
              parameters:
                id: $response.body#/id
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /send_lists/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Replaces the SendList resource.
      description: Replaces the SendList resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated SendList resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendList'
        required: true
      deprecated: false
    delete:
      operationId: deleteSendListItem
      tags:
        - SendList
      responses:
        '204':
          description: SendList resource deleted
        '404':
          description: Resource not found
      summary: Removes the SendList resource.
      description: Removes the SendList resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchSendListItem
      tags:
        - SendList
      responses:
        '200':
          description: SendList resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendList'
          links:
            GetSendListItem:
              operationId: getSendListItem
              parameters:
                id: $response.body#/id
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /send_lists/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Updates the SendList resource.
      description: Updates the SendList resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated SendList resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendList'
        required: true
      deprecated: false
    parameters: []
  /services:
    get:
      operationId: getServiceCollection
      tags:
        - Service
      responses:
        '200':
          description: Service collection
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:previous':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:previous':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
      summary: Retrieves the collection of Service resources.
      description: Retrieves the collection of Service resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: limit
          in: query
          description: The number of items per page
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        - name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[type]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[authorization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[configuration]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        - name: type
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'type[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        - name: organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'organization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        - name: authorization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'authorization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        - name: configuration
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'configuration[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        - name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postServiceCollection
      tags:
        - Service
      responses:
        '201':
          description: Service resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Service'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Service'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Service'
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Service'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Service'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service'
            text/html:
              schema:
                $ref: '#/components/schemas/Service'
          links:
            GetServiceItem:
              operationId: getServiceItem
              parameters:
                id: $response.body#/id
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /services/{id}`.'
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
      summary: Creates a Service resource.
      description: Creates a Service resource.
      parameters: []
      requestBody:
        description: The new Service resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      deprecated: false
    parameters: []
  '/services/{id}':
    get:
      operationId: getServiceItem
      tags:
        - Service
      responses:
        '200':
          description: Service resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '404':
          description: Resource not found
      summary: Retrieves a Service resource.
      description: Retrieves a Service resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putServiceItem
      tags:
        - Service
      responses:
        '200':
          description: Service resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          links:
            GetServiceItem:
              operationId: getServiceItem
              parameters:
                id: $response.body#/id
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /services/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Replaces the Service resource.
      description: Replaces the Service resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Service resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      deprecated: false
    delete:
      operationId: deleteServiceItem
      tags:
        - Service
      responses:
        '204':
          description: Service resource deleted
        '404':
          description: Resource not found
      summary: Removes the Service resource.
      description: Removes the Service resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /subscribers:
    get:
      operationId: getSubscriberCollection
      tags:
        - Subscriber
      responses:
        '200':
          description: Subscriber collection
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Subscriber'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:previous':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Subscriber'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:previous':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
      summary: Retrieves the collection of Subscriber resources.
      description: Retrieves the collection of Subscriber resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: limit
          in: query
          description: The number of items per page
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        - name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[email]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[dateInvited]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[dateAcceptedOrganization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[dateAcceptedUser]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: 'dateInvited[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateInvited[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateInvited[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateInvited[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateAcceptedOrganization[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateAcceptedOrganization[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateAcceptedOrganization[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateAcceptedOrganization[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateAcceptedUser[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateAcceptedUser[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateAcceptedUser[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateAcceptedUser[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: email
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'email[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        - name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postSubscriberCollection
      tags:
        - Subscriber
      responses:
        '201':
          description: Subscriber resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Subscriber'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Subscriber'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Subscriber'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Subscriber'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Subscriber'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Subscriber'
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Subscriber'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Subscriber'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscriber'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Subscriber'
            text/csv:
              schema:
                $ref: '#/components/schemas/Subscriber'
            text/html:
              schema:
                $ref: '#/components/schemas/Subscriber'
          links:
            GetSubscriberItem:
              operationId: getSubscriberItem
              parameters:
                id: $response.body#/id
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /subscribers/{id}`.'
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
      summary: Creates a Subscriber resource.
      description: Creates a Subscriber resource.
      parameters: []
      requestBody:
        description: The new Subscriber resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
        required: true
      deprecated: false
    parameters: []
  '/subscribers/{id}':
    get:
      operationId: getSubscriberItem
      tags:
        - Subscriber
      responses:
        '200':
          description: Subscriber resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
        '404':
          description: Resource not found
      summary: Retrieves a Subscriber resource.
      description: Retrieves a Subscriber resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putSubscriberItem
      tags:
        - Subscriber
      responses:
        '200':
          description: Subscriber resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          links:
            GetSubscriberItem:
              operationId: getSubscriberItem
              parameters:
                id: $response.body#/id
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /subscribers/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Replaces the Subscriber resource.
      description: Replaces the Subscriber resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Subscriber resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
        required: true
      deprecated: false
    delete:
      operationId: deleteSubscriberItem
      tags:
        - Subscriber
      responses:
        '204':
          description: Subscriber resource deleted
        '404':
          description: Resource not found
      summary: Removes the Subscriber resource.
      description: Removes the Subscriber resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchSubscriberItem
      tags:
        - Subscriber
      responses:
        '200':
          description: Subscriber resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          links:
            GetSubscriberItem:
              operationId: getSubscriberItem
              parameters:
                id: $response.body#/id
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /subscribers/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Updates the Subscriber resource.
      description: Updates the Subscriber resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Subscriber resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
        required: true
      deprecated: false
    parameters: []
components:
  schemas:
    Attachment:
      type: object
      properties:
        name:
          type: string
        uri:
          maxLength: 255
          description: Either a contact component person or contact list that will recieve this message
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mime:
          type: string
        resources:
          type: array
          items:
            type: string
    Message:
      type: object
      description: A  message to be send to a spefic recipient or list troug a message service.
      properties:
        reciever:
          maxLength: 255
          description: Either a contact component person or contact list or an plain email that will recieve this message
          type: string
          nullable: true
        sender:
          maxLength: 255
          description: 'Either a contact component person, or wrc application or an plain email that sends this message'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: subject of the mail
          type: string
          nullable: true
        content:
          description: The webresource template object (from wrc) that is used as content for this message
          type: string
        type:
          maxLength: 255
          description: The type of this message.
          type: string
          nullable: true
        resource:
          maxLength: 255
          description: A resource used for this message.
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        data:
          type: array
          items:
            type: string
          nullable: true
        status:
          maxLength: 255
          description: The current status of this message
          type: string
        service:
          description: The service used to send this message
          $ref: '#/components/schemas/Service'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    SendList:
      type: object
      description: SendList is a way for Organizations to send messages through email or phone.
      required:
        - name
        - organization
      properties:
        name:
          maxLength: 255
          description: The name of this SendList.
          type: string
        description:
          maxLength: 255
          description: The description of this SendList.
          type: string
          nullable: true
        mail:
          description: True if this is an mailing list.
          type: boolean
        phone:
          description: True if this is an phone list.
          type: boolean
        organization:
          maxLength: 255
          description: An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)
          type: string
        resource:
          maxLength: 255
          description: A extra resource (Mostly used if this list is for an organization in a id-vault application)
          type: string
          nullable: true
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber'
    Service:
      type: object
      description: A service that sends messages e.g. email or sms.
      properties:
        type:
          maxLength: 255
          description: 'The type of this service, iether use a pre configures service or just plain simple old smtp'
          type: string
        organization:
          maxLength: 255
          description: The RSIN of the organization that ownes this service
          type: string
        authorization:
          maxLength: 255
          description: The autorization be it password or api key that is used to connect to the service
          type: string
          nullable: true
        configuration:
          description: Any specific setting for this service
          type: array
          items:
            type: string
      required:
        - organization
        - authorization
    Subscriber:
      type: object
      description: SendList is a way for Applications to send messages through email or phone.
      properties:
        email:
          maxLength: 255
          description: email of the subscriber
          type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'resource of this subscriber, for example: wac/group, uc/user or cc/person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateAcceptedOrganization:
          description: The moment the invite was accepted by the organization
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: The moment the invite was accepted by the user
          type: string
          format: date-time
          nullable: true
        sendLists:
          type: array
          items:
            $ref: '#/components/schemas/SendList'
      required:
        - sendLists
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes: {}
security: []
tags: []
